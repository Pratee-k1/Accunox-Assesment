import psutil
import logging
from datetime import datetime

CPU_THRESHOLD = 80  
MEMORY_THRESHOLD = 80  
DISK_THRESHOLD = 80  
LOG_FILE = "system_health.log"

# Setup logging
logging.basicConfig(filename=LOG_FILE, level=logging.INFO, format="%(asctime)s - %(message)s")

def log_and_alert(message):
    
    logging.warning(message)
    print(message)

def check_cpu_usage():
    cpu_usage = psutil.cpu_percent(interval=1)
    if cpu_usage > CPU_THRESHOLD:
        log_and_alert(f"ALERT: High CPU usage detected: {cpu_usage}%")

def check_memory_usage():
    memory = psutil.virtual_memory()
    if memory.percent > MEMORY_THRESHOLD:
        log_and_alert(f"ALERT: High Memory usage detected: {memory.percent}%")

def check_disk_usage():
    disk = psutil.disk_usage('/')
    if disk.percent > DISK_THRESHOLD:
        log_and_alert(f"ALERT: High Disk usage detected: {disk.percent}%")

def check_running_processes():
    process_count = len(psutil.pids())
    logging.info(f"Total running processes: {process_count}")

if _name_ == "_main_":
    logging.info("Starting system health monitoring.")
    check_cpu_usage()
    check_memory_usage()
    check_disk_usage()
    check_running_processes()
    logging.info("System health monitoring completed.")