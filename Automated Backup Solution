import os
import paramiko
from scp import SCPClient
import logging
from datetime import datetime

# Configuration
SOURCE_DIRECTORY = "/path/to/your/source/directory"  
REMOTE_HOST = "remote.server.com"  
REMOTE_USER = "your_username"  
REMOTE_PASSWORD = "your_password"  
REMOTE_DIRECTORY = "/path/to/remote/backup/directory"  
LOG_FILE = "backup_log.txt"

# Setup logging
logging.basicConfig(filename=LOG_FILE, level=logging.INFO, format="%(asctime)s - %(message)s")

def create_ssh_client(host, user, password):
    try:
        client = paramiko.SSHClient()
        client.load_system_host_keys()
        client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        client.connect(host, username=user, password=password)
        logging.info("SSH connection established.")
        return client
    except Exception as e:
        logging.error(f"Failed to establish SSH connection: {e}")
        return None

def backup_directory():
    if not os.path.exists(SOURCE_DIRECTORY):
        logging.error(f"Source directory does not exist: {SOURCE_DIRECTORY}")
        return

    ssh_client = create_ssh_client(REMOTE_HOST, REMOTE_USER, REMOTE_PASSWORD)
    if not ssh_client:
        return

    try:
        with SCPClient(ssh_client.get_transport()) as scp:
            scp.put(SOURCE_DIRECTORY, recursive=True, remote_path=REMOTE_DIRECTORY)
            logging.info("Backup successful.")
    except Exception as e:
        logging.error(f"Backup failed: {e}")
    finally:
        ssh_client.close()

if _name_ == "_main_":
    logging.info("Starting backup process.")
    backup_directory()
    logging.info("Backup process completed.")